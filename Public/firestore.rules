rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // -------- helpers --------
    function signedIn() { return request.auth != null; }
    function isOwner() {
      return signedIn() && lower(request.auth.token.email) == 'john@distinctrevelations.com';
    }
    function myBiz() {
      return signedIn()
        ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data.businessKey
        : null;
    }
    function sameBiz(biz) { return isOwner() || (signedIn() && myBiz() == biz); }

    // Users profile: user can see/edit their own profile; owner can see/edit all.
    match /users/{uid} {
      allow read: if signedIn() && (uid == request.auth.uid || isOwner());
      allow create: if signedIn() && uid == request.auth.uid;
      allow update: if signedIn() && (uid == request.auth.uid || isOwner());
      allow delete: if isOwner();
    }

    // Per-business scope
    match /businesses/{biz} {
      // Anyone in the same business (or owner) can read the business doc
      allow read: if sameBiz(biz);

      // Only owner can change top-level business fields (e.g., header/status/progress)
      allow write: if isOwner();

      // Activity — read for all; only owner can write
      match /activities/{id} {
        allow read: if sameBiz(biz);
        allow create, update, delete: if isOwner();
      }

      // Milestones — read for all; only owner can write
      match /milestones/{id} {
        allow read: if sameBiz(biz);
        allow create, update, delete: if isOwner();
      }

      // Q&A — read for all; user can CRUD their own; owner can do everything
      match /qna/{id} {
        allow read: if sameBiz(biz);
        allow create: if sameBiz(biz) &&
                      request.resource.data.ownerUid == request.auth.uid;
        allow update, delete: if sameBiz(biz) && (
                                isOwner() ||
                                resource.data.ownerUid == request.auth.uid
                              );
      }

      // File metadata — read for all; user can CRUD their own; owner can do everything
      match /files/{id} {
        allow read: if sameBiz(biz);
        allow create: if sameBiz(biz) &&
                      request.resource.data.ownerUid == request.auth.uid;
        allow update, delete: if sameBiz(biz) && (
                                isOwner() ||
                                resource.data.ownerUid == request.auth.uid
                              );
      }
    }
  }
}