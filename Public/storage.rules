rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    function signedIn() { return request.auth != null; }
    function isOwner() {
      return signedIn() && lower(request.auth.token.email) == 'john@distinctrevelations.com';
    }

    // New scheme (required for self-deletes):
    //   /{biz}/files/{uid}/{filename}
    match /{biz}/files/{uid}/{file=**} {
      allow read: if signedIn();
      allow write, delete: if signedIn() && (request.auth.uid == uid || isOwner());
    }

    // Legacy objects without {uid} — readable by signed-in; only owner can change
    match /{biz}/files/{legacy=**} {
      allow read: if signedIn();
      allow write, delete: if isOwner();
    }

    // Brand/logo assets — owner writes; everyone signed-in reads
    match /logos/{biz}/{file=**} {
      allow read: if signedIn();
      allow write, delete: if isOwner();
    }
  }
}